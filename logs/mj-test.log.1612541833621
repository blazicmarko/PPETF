INFO  17:15:19,374 - Compiling source file: C:\Users\Marko\Desktop\ProjectPP\workspace\MJCompiler\test\program.mj
INFO  17:15:19,485 - #2 program
INFO  17:15:19,485 - #29 PROG
INFO  17:15:19,486 - #29 int
INFO  17:15:19,490 - #29 x
INFO  17:15:19,494 - #18 ,
INFO  17:15:19,498 - #29 y
INFO  17:15:19,498 - #17 ;
INFO  17:15:19,500 - #29 bool
INFO  17:15:19,501 - #29 b
INFO  17:15:19,501 - #21 [
INFO  17:15:19,501 - #22 ]
INFO  17:15:19,502 - #17 ;
INFO  17:15:19,504 - #3 const
INFO  17:15:19,504 - #29 int
INFO  17:15:19,504 - #29 c
INFO  17:15:19,505 - #14 =
INFO  17:15:19,505 - #27 7
INFO  17:15:19,506 - #17 ;
INFO  17:15:19,508 - #3 const
INFO  17:15:19,509 - #29 char
INFO  17:15:19,509 - #29 d
INFO  17:15:19,510 - #14 =
INFO  17:15:19,510 - #30 A
INFO  17:15:19,510 - #17 ;
INFO  17:15:19,511 - #3 const
INFO  17:15:19,512 - #29 bool
INFO  17:15:19,512 - #29 aw
INFO  17:15:19,512 - #14 =
INFO  17:15:19,512 - #28 1
INFO  17:15:19,512 - #17 ;
INFO  17:15:19,513 - #23 {
INFO  17:15:19,513 - #8 void
INFO  17:15:19,514 - #29 main
INFO  17:15:19,514 - #19 (
INFO  17:15:19,515 - #20 )
INFO  17:15:19,516 - #29 int
INFO  17:15:19,517 - #29 a
INFO  17:15:19,517 - #18 ,
INFO  17:15:19,518 - #29 o
INFO  17:15:19,518 - #17 ;
INFO  17:15:19,519 - #23 {
INFO  17:15:19,520 - #29 c
INFO  17:15:19,522 - #14 =
INFO  17:15:19,523 - #29 b
INFO  17:15:19,526 - #21 [
INFO  17:15:19,528 - #27 2
INFO  17:15:19,529 - #22 ]
INFO  17:15:19,532 - #25 ?
INFO  17:15:19,533 - #27 1
INFO  17:15:19,533 - #7 :
INFO  17:15:19,533 - #27 2
INFO  17:15:19,533 - #17 ;
INFO  17:15:19,535 - #24 }
INFO  17:15:19,536 - #24 }
INFO  17:15:19,544 - Program(
  ProgName(
   PROG
  ) [ProgName]
  VarConstDecListConst(
    VarConstDecListConst(
      VarConstDecListConst(
        VarConstDecListVar(
          VarConstDecListVar(
            NoVarConstDecList(
            ) [NoVarConstDecList]
            VarDeclarations(
              Type(
               int
              ) [Type]
              VarDeclaration(
               x
                NoBracket(
                ) [NoBracket]
              ) [VarDeclaration]
              VarDeclMoreComma(
                VarDeclaration(
                 y
                  NoBracket(
                  ) [NoBracket]
                ) [VarDeclaration]
                NoVarDeclMore(
                ) [NoVarDeclMore]
              ) [VarDeclMoreComma]
            ) [VarDeclarations]
          ) [VarConstDecListVar]
          VarDeclarations(
            Type(
             bool
            ) [Type]
            VarDeclaration(
             b
              Brackets(
              ) [Brackets]
            ) [VarDeclaration]
            NoVarDeclMore(
            ) [NoVarDeclMore]
          ) [VarDeclarations]
        ) [VarConstDecListVar]
        ConstDeclarations(
          Type(
           int
          ) [Type]
          ConstantNum(
           c
           7
          ) [ConstantNum]
          NoConstDeclMore(
          ) [NoConstDeclMore]
        ) [ConstDeclarations]
      ) [VarConstDecListConst]
      ConstDeclarations(
        Type(
         char
        ) [Type]
        ConstantChar(
         d
         A
        ) [ConstantChar]
        NoConstDeclMore(
        ) [NoConstDeclMore]
      ) [ConstDeclarations]
    ) [VarConstDecListConst]
    ConstDeclarations(
      Type(
       bool
      ) [Type]
      ConstantBool(
       aw
       1
      ) [ConstantBool]
      NoConstDeclMore(
      ) [NoConstDeclMore]
    ) [ConstDeclarations]
  ) [VarConstDecListConst]
  OneMethodDeclaration(
    MethodDeclaration(
      MethName(
       main
      ) [MethName]
      VarDeclLocalListRecursion(
        NoVarDeclLocalListRecursion(
        ) [NoVarDeclLocalListRecursion]
        VarLocalDeclarations(
          Type(
           int
          ) [Type]
          VarDeclarationLocal(
           a
            NoBracket(
            ) [NoBracket]
          ) [VarDeclarationLocal]
          VarDeclMoreLocalComma(
            VarDeclarationLocal(
             o
              NoBracket(
              ) [NoBracket]
            ) [VarDeclarationLocal]
            NoVarDeclMoreLocal(
            ) [NoVarDeclMoreLocal]
          ) [VarDeclMoreLocalComma]
        ) [VarLocalDeclarations]
      ) [VarDeclLocalListRecursion]
      StatementList(
        NoStatementList(
        ) [NoStatementList]
        Declaration(
          Evaluation(
            DesignatorVal(
             c
            ) [DesignatorVal]
            Ternary(
              ExpressionSub(
                NoMinus(
                ) [NoMinus]
                TermListTerm(
                  Term(
                    FactorListFactor(
                      FactorDesignator(
                        DesignatorArray(
                          ArrayName(
                           b
                          ) [ArrayName]
                          NoTernary(
                            ExpressionSub(
                              NoMinus(
                              ) [NoMinus]
                              TermListTerm(
                                Term(
                                  FactorListFactor(
                                    FactorNum(
                                     2
                                    ) [FactorNum]
                                  ) [FactorListFactor]
                                ) [Term]
                              ) [TermListTerm]
                            ) [ExpressionSub]
                          ) [NoTernary]
                        ) [DesignatorArray]
                      ) [FactorDesignator]
                    ) [FactorListFactor]
                  ) [Term]
                ) [TermListTerm]
              ) [ExpressionSub]
              ExpressionSub(
                NoMinus(
                ) [NoMinus]
                TermListTerm(
                  Term(
                    FactorListFactor(
                      FactorNum(
                       1
                      ) [FactorNum]
                    ) [FactorListFactor]
                  ) [Term]
                ) [TermListTerm]
              ) [ExpressionSub]
              ExpressionSub(
                NoMinus(
                ) [NoMinus]
                TermListTerm(
                  Term(
                    FactorListFactor(
                      FactorNum(
                       2
                      ) [FactorNum]
                    ) [FactorListFactor]
                  ) [Term]
                ) [TermListTerm]
              ) [ExpressionSub]
            ) [Ternary]
          ) [Evaluation]
        ) [Declaration]
      ) [StatementList]
    ) [MethodDeclaration]
  ) [OneMethodDeclaration]
) [Program]
INFO  17:15:19,545 - ===================================
INFO  17:15:19,594 - Obradjuje se funkcija main na liniji 8
INFO  17:15:19,597 - ===================================
INFO  17:15:19,600 - Parsiranje uspesno zavrseno!
